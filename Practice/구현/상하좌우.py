# 여행가 A는 N * N크기의 정사각형 공간위에 서있다. 이공간은 1*1 크기의 정사각형으로 나누어져 있다. 
# 가장 왼쪽 위 좌표는 (1,1)이며 가장 오른쪽 아래 좌표는 (N, N)에 해당한다. 
# 여행가 A는 상하좌우 방향으로 이동할 수 있으며 시작 좌표는 항상(1,1)이다. 우리 앞에 여행가 A가 이동할 계획이 적힌 계획서가 놓여있다.
# 계획서에는 L, R, U, D 중 하나의 문자가 반복적으로 적혀있다. 각 문자의 의미는 다음과 같다.

# L : 왼쪽으로 한칸 이동
# R : 오른쪽으로 한칸이동
# U : 위로 한칸 이동
# D : 아래로 한칸 이동

# 이때 여행가 A가 N * N 크기의 정사각형 공간을 벗어나는 움직임은 무시된다.
# 계획서가 주여졌을 때 여행가 A가 최종적으로 도착할 지점의 좌표를 출력하는 프로그램을 작성하시오.

# 입력 조건
# - 첫째줄에 공간의 크기를 나타내는 N이 주어진다.(1<= N <= 100)
# - 둘째줄에 여행가 A가 이동할 계획서 내용이 주어진다.(1<= 이동횟수 <= 100)

# 출력 조건
# - 첫째 줄에 여행가 A가 최종적으로 도착할 지점의 좌표 (X, Y)를 공백으로 구분하여 출력한다.

# 맨날 헷갈리는 부분
# 오른쪽으로 이동 -> Y + 1
# 아래로 이동 -> X + 1

import sys
from collections import deque
input = sys.stdin.readline

N = int(input())
map = [[0] for _ in range(N)]

plans = input().split()

dx = [1, -1, 0, 0]
dy = [0, 0 , 1, -1]
move_types = ['D', 'U', 'R', 'L']

x, y = 1, 1

for plan in plans:
    for i in range(len(move_types)):
        if plan == move_types[i]:
            nx = x + dx[i]
            ny = y + dy[i]

            if 1 <= nx < N and 1 <= ny < N:
                x, y = nx, ny

    
print(x, y)