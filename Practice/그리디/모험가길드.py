'''
Q3. 모험가 길드⭐
  한 마을에 모험가가 N명 있습니다. 모험가 길드에서는 N명의 모험가를 대상으로 공포도를 측정했는데 
  공포도가 높은 모험가는 쉽게 공포를 느껴 위험상황에서 제대로 대처할 능력이 떨어집니다.
  모험가 길드장인 동빈이는 모험가 그룹을 안전하게 구성하고자 공포도가 X인 모험가는 반드시 X명 이상으로 구성한 모험가 그룹에 참여해야 여행을 떠나도록 규정했습니다.
  N명의 모험가에 대한 정보가 주어졌을 때, 여행을 떠날 수 있는 그룹의 수의 최대값을 구하는 프로그램을 작성하세요. 
  예를 들어 N=5이고 각 모험가의 공포도가 "2 3 1 2 2"이라고 가정합시다.
이때 그룹 1에 공포도가 1,2,3인 모험가를 한 명씩 넣고 그룹2에 공포도가 2인 남은 두명을 넣게되면 총 2개의 그룹을 만들 수 있습니다.
또한 몇명의 모험가는 마을에 그대로 남아있어도 됩니다.

*입력 조건
- 첫째 줄에 모험가의 수 N이 주어집니다.(1<=N<=100,000)
- 둘째 줄에 각 모험가의 공포도의 값을 N이하의 자연수로 주어지며 각 자연수는 공백으로 구분합니다.

*출력 조건
-여행을 떠날 수 있는 그룹의 최댓값을 출력합니다

*입력 예시
5
2 3 1 2 2

*출력 예시
2
'''

N = int(input())
scared_array = list(map(int, input().split()))

scared_array.sort() # 오름차순으로 정렬

num_of_group = 0
count = 0

for s in scared_array:
    count += 1
    # 멤버의 공포지수가 멤버의 수보다 더 작은 경우 (출발 가능)
    if s <= count :
        num_of_group += 1
        count = 0

print(num_of_group)